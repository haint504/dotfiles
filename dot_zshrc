# # Customize to your needs...
# # .. will already work as 'cd ..' in prezto ZSH
# # Go up two directories
# alias ...='cd ../..'
# # Go up three directories
# alias ....='cd ../../..'
# # Go up four directories
# alias .....='cd ../../../..'


# fpath=(~/.zsh/completion $fpath)

# # Speeds up load time
# DISABLE_UPDATE_PROMPT=true

# # Perform compinit only once a day.
# autoload -Uz compinit

# setopt EXTENDEDGLOB
# for dump in $ZSH_COMPDUMP(#qN.m1); do
#   compinit
#   if [[ -s "$dump" && (! -s "$dump.zwc" || "$dump" -nt "$dump.zwc") ]]; then
#     zcompile "$dump"
#   fi
#   echo "Initializing Completions..."
# done
# unsetopt EXTENDEDGLOB
# compinit -C

# # Go up an abritrary number of directories
# # Use with 'up' or 'up 5' to go up N directories
# function up {
#     if [[ "$#" < 1 ]] ; then
#         cd ..
#     else
#         CDSTR=""
#         for i in {1..$1} ; do
#             CDSTR="../$CDSTR"
#         done
#         cd $CDSTR
#     fi
# }

# # Colorized CAT!
# alias ccat='pygmentize -g'

# # why would you type 'cd dir' if you could just type 'dir'?
# setopt AUTO_CD

# # Now we can pipe to multiple outputs!
# setopt MULTIOS

# # This makes cd=pushd
# setopt AUTO_PUSHD

# # This will use named dirs when possible
# setopt AUTO_NAME_DIRS

# # If we have a glob this will expand it
# setopt GLOB_COMPLETE
# setopt PUSHD_MINUS

# # No more annoying pushd messages...
# # setopt PUSHD_SILENT

# # blank pushd goes to home
# setopt PUSHD_TO_HOME

# # this will ignore multiple directories for the stack.  Useful?  I dunno.
# setopt PUSHD_IGNORE_DUPS

# # 10 second wait if you do something that will delete everything.  I wish I'd had this before...
# setopt RM_STAR_WAIT

# # use magic (this is default, but it can't hurt!)
# setopt ZLE

# setopt NO_HUP

# # only fools wouldn't do this ;-)
# export EDITOR="code -n -w"

# setopt IGNORE_EOF

# # If I could disable Ctrl-s completely I would!
# setopt NO_FLOW_CONTROL

# # Keep echo "station" > station from clobbering station
# setopt NO_CLOBBER

# # Case insensitive globbing
# setopt NO_CASE_GLOB

# # Be Reasonable!
# setopt NUMERIC_GLOB_SORT

# # I don't know why I never set this before.
# setopt EXTENDED_GLOB

# # hows about arrays be awesome?  (that is, frew${cool}frew has frew surrounding all the variables, not just first and last
# setopt RC_EXPAND_PARAM

# # Who doesn't want home and end to work?
# bindkey '\e[1~' beginning-of-line
# bindkey '\e[4~' end-of-line

# # Incremental search is elite!
# bindkey -M vicmd "/" history-incremental-search-backward
# bindkey -M vicmd "?" history-incremental-search-forward

# # Search based on what you typed in already
# bindkey -M vicmd "//" history-beginning-search-backward
# bindkey -M vicmd "??" history-beginning-search-forward

# bindkey "\eOP" run-help

# # oh wow!  This is killer...  try it!
# bindkey -M vicmd "q" push-line

# # it's like, space AND completion.  Gnarlbot.
# bindkey -M viins ' ' magic-space

# alias ls='lsd'
# alias l='ls -l'
# alias la='ls -a'
# alias lla='ls -la'
# alias lt='ls --tree'

# alias less='less -R'

# # key bindings
# bindkey "\e[1~" beginning-of-line
# bindkey "\e[4~" end-of-line
# bindkey "\e[5~" beginning-of-history
# bindkey "\e[6~" end-of-history
# bindkey "\e[3~" delete-char
# bindkey "\e[2~" quoted-insert
# bindkey "\e[5C" forward-word
# bindkey "\eOc" emacs-forward-word
# bindkey "\e[5D" backward-word
# bindkey "\eOd" emacs-backward-word
# bindkey "\ee[C" forward-word
# bindkey "\ee[D" backward-word
# bindkey "^H" backward-delete-word
# # for rxvt
# bindkey "\e[8~" end-of-line
# bindkey "\e[7~" beginning-of-line
# # for non RH/Debian xterm, can't hurt for RH/DEbian xterm
# bindkey "\eOH" beginning-of-line
# bindkey "\eOF" end-of-line
# # for freebsd console
# bindkey "\e[H" beginning-of-line
# bindkey "\e[F" end-of-line
# # completion in the middle of a line
# bindkey '^i' expand-or-complete-prefix

# # Include OS special
# rc="${ZDOTDIR:-${HOME}}/.zshrc.`uname`"
# if [ -r $rc ]; then
#     source $rc
# fi

# . "$HOME/.atuin/bin/env"

#eval "$(atuin init zsh)"

# Required Tools (install these manually):
# - fzf: brew install fzf / sudo apt install fzf
# - eza: brew install eza / cargo install eza
# - fd: brew install fd / sudo apt install fd-find
# - ripgrep: brew install ripgrep / sudo apt install ripgrep
# - zoxide: brew install zoxide / sudo apt install zoxide
# - mise: curl https://mise.jdx.dev/install.sh | sh
# - starship: curl -sS https://starship.rs/install.sh | sh


ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   command mkdir -p "$(dirname $ZINIT_HOME)"
   command git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit wait lucid for \
    atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    blockf \
        zsh-users/zsh-completions \
    atload"!_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions

#olets/zsh-abbr \


zinit wait lucid for \
    Aloxaf/fzf-tab \
    akash329d/zsh-alias-finder \
    hlissner/zsh-autopair


zinit wait lucid for \
    atclone"dircolors -b LS_COLORS > clrs.zsh" \
    atpull'%atclone' pick"clrs.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"' \
        trapd00r/LS_COLORS

zinit wait lucid for \
    zdharma-continuum/fast-syntax-highlighting

if command -v mise &> /dev/null; then
    eval "$(mise activate zsh)"
fi

if command -v starship &> /dev/null; then
    eval "$(starship init zsh)"
fi

if command -v zoxide &> /dev/null; then
    eval "$(zoxide init zsh)"
fi

if command -v atuin &> /dev/null; then
    eval "$(atuin init zsh)"
fi

if [ -z "$SSH_AUTH_SOCK" ]; then
    eval "$(ssh-agent -s)" > /dev/null 2>&1
fi

# # Completion configuration
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# Completion caching
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'


# # Completion caching
# zstyle ':completion:*' use-cache on
# zstyle ':completion:*' cache-path ~/.zsh/cache
# # preview directory's content with eza when completing cd
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# # preview for zoxide commands
# zstyle ':fzf-tab:complete:z:*' fzf-preview 'eza -1 --color=always $realpath'
# zstyle ':fzf-tab:complete:zi:*' fzf-preview 'eza -1 --color=always $realpath'
# # preview for mise
# zstyle ':fzf-tab:complete:mise:*' fzf-preview 'mise list $word 2>/dev/null || echo "Available versions for $word"'
# # preview for atuin
# zstyle ':fzf-tab:complete:atuin:*' fzf-preview 'atuin stats 2>/dev/null || echo "Atuin history statistics"'
# # custom fzf flags
# # NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
# zstyle ':fzf-tab:*' fzf-flags --bind=tab:accept
# # To make fzf-tab follow FZF_DEFAULT_OPTS
# # NOTE: This may lead to unexpected behavior since some flags break this plugin
# zstyle ':fzf-tab:*' use-fzf-default-opts yes
# # switch group using `<` and `>`
# zstyle ':fzf-tab:*' switch-group '<' '>'

ZSH_AUTOSUGGEST_STRATEGY=(history)

# Faster autosuggestions (async)
ZSH_AUTOSUGGEST_USE_ASYNC=true

# Prevent conflicts with tab completion
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(complete-word)
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(expand-or-complete)
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(expand-or-complete-prefix)

# Suggestion colors (subtle like Fish)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'

# # FZF default options
# export FZF_DEFAULT_OPTS="
#   --height 40%
#   --layout=reverse
#   --border
#   --preview-window=right:50%
#   --bind='ctrl-/:toggle-preview'
# "

# Use fd or find for FZF if available
if command -v fd &> /dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
elif command -v rg &> /dev/null; then
    export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
fi

# Zoxide configuration (smart cd with fzf integration)
# export _ZO_FZF_OPTS="
#   --height 40%
#   --layout=reverse
#   --border
#   --preview 'eza -1 --color=always {2..} 2>/dev/null || ls --color=always {2..}'
#   --preview-window=right:30%
# "

# =============================================================================
# Shell Options
# =============================================================================

# Directory navigation
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Globbing
setopt EXTENDED_GLOB
setopt GLOB_DOTS

# Job control
setopt AUTO_RESUME
setopt LONG_LIST_JOBS

# Misc
setopt INTERACTIVE_COMMENTS
setopt HASH_LIST_ALL
setopt COMPLETE_IN_WORD
setopt ALWAYS_TO_END

# =============================================================================
# Aliases
# =============================================================================

# Enhanced ls (eza is modern replacement for exa)
if command -v eza &> /dev/null; then
    alias ls='eza --group-directories-first --icons'
    alias la='eza -la --group-directories-first --icons'
    alias ll='eza -l --group-directories-first --icons'
    alias tree='eza --tree --icons'
elif command -v exa &> /dev/null; then
    alias ls='exa --group-directories-first'
    alias la='exa -la --group-directories-first'
    alias ll='exa -l --group-directories-first'
    alias tree='exa --tree'
else
    alias ls='ls --color=auto --group-directories-first'
    alias la='ls -la --color=auto --group-directories-first'
    alias ll='ls -l --color=auto --group-directories-first'
fi

# Enhanced grep with ripgrep
if command -v rg &> /dev/null; then
    alias grep='rg'
    alias rg='rg --color=auto'
else
    alias grep='grep --color=auto'
fi

# Enhanced find with fd
if command -v fd &> /dev/null; then
    alias find='fd'
fi

# Directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Git shortcuts
alias g='git'
alias ga='git add'
alias gc='git commit'
alias gco='git checkout'
alias gd='git diff'
alias gl='git log --oneline'
alias gp='git push'
alias gs='git status'

# Safety nets
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'


export PATH="$HOME/.atuin/bin:$PATH"
